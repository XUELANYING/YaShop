{"remainingRequest":"E:\\三阶段\\xxx\\Ya\\node_modules\\babel-loader\\lib\\index.js!E:\\三阶段\\xxx\\Ya\\src\\Observer.js","dependencies":[{"path":"E:\\三阶段\\xxx\\Ya\\src\\Observer.js","mtime":1554092157840},{"path":"E:\\三阶段\\xxx\\Ya\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1553053284079},{"path":"E:\\三阶段\\xxx\\Ya\\node_modules\\babel-loader\\lib\\index.js","mtime":1553053229858}],"contextDependencies":[],"result":["/*\r\n    on 绑定\r\n\r\n    emit  触发\r\n\r\n    off  解绑\r\n\r\n\r\n    //存放事件\r\n    eventList = {\r\n        key:val\r\n        handle:[]\r\n    }\r\n\r\n\r\n\r\n    1对多\r\n    on(eventName,callback);\r\n        handle:-------N多个\r\n    1、判断事件名称是否存在\r\n\r\n    2、如果存在的情况下将cb存放在eventName这个数组当中\r\n\r\n    3、如果不存在创建key值为eventName val值为数组\r\n\r\n\r\n\r\n    1对多\r\n    emit(eventName,params);\r\n\r\n    当调用emit的时候获取到eventName这的值，对值判断，如果值不存在直接return\r\n    如果存在遍历这个值全局进行调用，然后将params传入这些函数\r\n\r\n\r\n\r\n\r\n    off(eventName,[callback])\r\n    当调用off的时候获取到eventName这的值，对值判断，如果值不存在直接return\r\n    如果存在判断callback是否存在  如果存在删除指定的函数\r\n    如果不存在将当前数组清空\r\n\r\n\r\n*/\nvar EventList = {};\n\nvar on = function on(eventName, callback) {\n  if (!EventList[eventName]) {\n    EventList[eventName] = [];\n  }\n\n  EventList[eventName].push(callback);\n};\n\nvar emit = function emit(eventName, params) {\n  if (!EventList[eventName]) return;\n  EventList[eventName].map(function (cb) {\n    cb(params);\n  });\n};\n\nvar off = function off(eventName, callback) {\n  if (!EventList[eventName]) return;\n\n  if (callback) {\n    var index = EventList[eventName].indexOf(callback);\n    EventList[eventName].splice(index, 1);\n  } else {\n    EventList[eventName] = [];\n  }\n};\n\nexport default {\n  $on: on,\n  $emit: emit,\n  $off: off\n};",{"version":3,"sources":["E:\\三阶段\\xxx\\Ya\\src\\Observer.js"],"names":["EventList","on","eventName","callback","push","emit","params","map","cb","off","index","indexOf","splice","$on","$emit","$off"],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4CA,IAAMA,SAAS,GAAG,EAAlB;;AAEA,IAAMC,EAAE,GAAG,SAALA,EAAK,CAAUC,SAAV,EAAqBC,QAArB,EAA+B;AACtC,MAAI,CAACH,SAAS,CAACE,SAAD,CAAd,EAA2B;AACvBF,IAAAA,SAAS,CAACE,SAAD,CAAT,GAAuB,EAAvB;AACH;;AACDF,EAAAA,SAAS,CAACE,SAAD,CAAT,CAAqBE,IAArB,CAA0BD,QAA1B;AACH,CALD;;AAQA,IAAME,IAAI,GAAG,SAAPA,IAAO,CAAUH,SAAV,EAAqBI,MAArB,EAA6B;AACtC,MAAI,CAACN,SAAS,CAACE,SAAD,CAAd,EAA2B;AAE3BF,EAAAA,SAAS,CAACE,SAAD,CAAT,CAAqBK,GAArB,CAAyB,UAACC,EAAD,EAAQ;AAC7BA,IAAAA,EAAE,CAACF,MAAD,CAAF;AACH,GAFD;AAGH,CAND;;AASA,IAAMG,GAAG,GAAG,SAANA,GAAM,CAAUP,SAAV,EAAqBC,QAArB,EAA+B;AACvC,MAAI,CAACH,SAAS,CAACE,SAAD,CAAd,EAA2B;;AAE3B,MAAIC,QAAJ,EAAc;AACV,QAAIO,KAAK,GAAGV,SAAS,CAACE,SAAD,CAAT,CAAqBS,OAArB,CAA6BR,QAA7B,CAAZ;AACAH,IAAAA,SAAS,CAACE,SAAD,CAAT,CAAqBU,MAArB,CAA4BF,KAA5B,EAAmC,CAAnC;AACH,GAHD,MAGO;AACHV,IAAAA,SAAS,CAACE,SAAD,CAAT,GAAuB,EAAvB;AACH;AACJ,CATD;;AAWA,eAAe;AACXW,EAAAA,GAAG,EAAEZ,EADM;AAEXa,EAAAA,KAAK,EAAET,IAFI;AAGXU,EAAAA,IAAI,EAAEN;AAHK,CAAf","sourcesContent":["/*\r\n    on 绑定\r\n\r\n    emit  触发\r\n\r\n    off  解绑\r\n\r\n\r\n    //存放事件\r\n    eventList = {\r\n        key:val\r\n        handle:[]\r\n    }\r\n\r\n\r\n\r\n    1对多\r\n    on(eventName,callback);\r\n        handle:-------N多个\r\n    1、判断事件名称是否存在\r\n\r\n    2、如果存在的情况下将cb存放在eventName这个数组当中\r\n\r\n    3、如果不存在创建key值为eventName val值为数组\r\n\r\n\r\n\r\n    1对多\r\n    emit(eventName,params);\r\n\r\n    当调用emit的时候获取到eventName这的值，对值判断，如果值不存在直接return\r\n    如果存在遍历这个值全局进行调用，然后将params传入这些函数\r\n\r\n\r\n\r\n\r\n    off(eventName,[callback])\r\n    当调用off的时候获取到eventName这的值，对值判断，如果值不存在直接return\r\n    如果存在判断callback是否存在  如果存在删除指定的函数\r\n    如果不存在将当前数组清空\r\n\r\n\r\n*/\r\n\r\nconst EventList = {}\r\n\r\nconst on = function (eventName, callback) {\r\n    if (!EventList[eventName]) {\r\n        EventList[eventName] = [];\r\n    }\r\n    EventList[eventName].push(callback);\r\n}\r\n\r\n\r\nconst emit = function (eventName, params) {\r\n    if (!EventList[eventName]) return;\r\n\r\n    EventList[eventName].map((cb) => {\r\n        cb(params)\r\n    })\r\n}\r\n\r\n\r\nconst off = function (eventName, callback) {\r\n    if (!EventList[eventName]) return;\r\n\r\n    if (callback) {\r\n        let index = EventList[eventName].indexOf(callback);\r\n        EventList[eventName].splice(index, 1);\r\n    } else {\r\n        EventList[eventName] = [];\r\n    }\r\n}\r\n\r\nexport default {\r\n    $on: on,\r\n    $emit: emit,\r\n    $off: off\r\n}\r\n\r\n\r\n\r\n"]}]}